// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String
  lastName  String
  email     String   @unique
  phone     String   @unique
  userName  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  auth      Auth?
  authId    String   @unique @db.Uuid
}

model Auth {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  otp             OTP            @relation(fields: [otpId], references: [id])
  passwordStore   PasswordStore?
  lastLogin       DateTime       @default(now())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  otpId           String         @unique @db.Uuid
  passwordStoreId String         @unique @db.Uuid
  userId          String         @unique @db.Uuid
}

model OTP {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  otp       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  auth      Auth?
  expireAt  DateTime
  token     String @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

model PasswordStore {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authId    String   @unique @db.Uuid
  auth      Auth     @relation(fields: [authId], references: [id], onDelete: Cascade)
}
